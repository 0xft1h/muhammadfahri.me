{"componentChunkName":"component---src-templates-post-template-js","path":"/blog/manipulacion-de-bits","result":{"data":{"avatar":{"sizes":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='300'%20viewBox='0%200%20400%20300'%20preserveAspectRatio='none'%3e%3cpath%20d='M202%20101c-12%203-14%204-19%208-15%2010-21%2025-17%2041l2%207c0%203%201%204%202%204l1%201%201%202c2%201%209%2019%2010%2027%201%204%200%205-1%205l-2%201h2l2%201-3%201-1%201-1%201h-4l-2%201c1%201-9%205-12%204l-1%201-2%201c-9%200-22%2017-32%2041l-5%2011c-7%2012-7%2015%200%2020%203%202%204%203%202%203v1c2%201%202%201%200%202v1c2%200%202%201%202%207l-1%206h164l9-3%2013-6c5-3%205-2-2-19l-13-33c-8-22-15-30-27-33a1234%201234%200%2001-27-6c4%202%202%2019-3%2025-6%205-9%208-10%206h-2c-1%201-1%201-3-1-3-4-3-8-2-11l2-10%201-9%201-3c0-3-3-5-6-3l-2-1%202-1c1%200%202-2%200-3v-2c1-3%200-7-3-9-2-2-2-2-1-3l2-1%202-3c5-3-1-8-9-8l-5-1c0-3%203-4%208-4%203%200%204%200%204-2l4%204c4%203%205%205%204%206l1%202%208-1%202%201-1%203-2%206c0%202%200%202%201%201l2-3c0-1%201-2%202-1v-1c-1-1%200-4%202-3h1c0-1%200-2%201-1l1-3c0-1%200-2%201-1%200%202%205-3%207-8l3-4c2-2%202-3%202-13v-7l-1-3c-1-3-13-14-13-12h-1l-7-7-5-4c-6-6-17-8-26-6'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3333333333333333,"src":"/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/7d509/avatar.jpg","srcSet":"/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/8d052/avatar.jpg 180w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/e2788/avatar.jpg 360w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/7d509/avatar.jpg 720w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/10d63/avatar.jpg 1080w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/7f945/avatar.jpg 1440w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/d2452/avatar.jpg 4000w","sizes":"(max-width: 720px) 100vw, 720px"}},"site":{"siteMetadata":{"title":"Muhammad Fahri","siteUrl":"https://muhammadfahri.me"}},"mdx":{"id":"86836316-39ed-5688-8cfd-05ef40d4875c","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"model\": \"post\",\n  \"title\": \"Manipulación de bits\",\n  \"description\": \"Manipulación de bits y usos.\",\n  \"author\": \"Dante Calderón\",\n  \"pathPrefix\": \"blog\",\n  \"slug\": \"manipulacion-de-bits\",\n  \"image\": \"../images/bit-manipulation.png\",\n  \"date\": \"2018-08-17T03:16:12-05:00\",\n  \"published\": true,\n  \"tags\": [\"Competitive Programming\", \"STLC++\", \"C/C++\", \"Algorithms\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"className\": \"md-h3\",\n    \"id\": \"operaciónes-útiles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#operaci%C3%B3nes-%C3%BAtiles\",\n    \"aria-label\": \"operaciónes útiles permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Operaci\\xF3nes \\xFAtiles\"), mdx(\"h4\", {\n    \"className\": \"md-h4\",\n    \"id\": \"conocer-si-el-j-ésimo-bitdesde-la-derecha-es-1-ó-0\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#conocer-si-el-j-%C3%A9simo-bitdesde-la-derecha-es-1-%C3%B3-0\",\n    \"aria-label\": \"conocer si el j ésimo bitdesde la derecha es 1 ó 0 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Conocer si el j-\\xE9simo bit(desde la derecha) es 1 \\xF3 0\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Para :smile: saber si el j-\\xE9simo bit est\\xE1 encendido(1) \\xF3 apagado(0) es  necesario realizar la operaci\\xF3n \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AND\"), \" con un segundo n\\xFAmero el cual tenga el bit en la posici\\xF3n \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"j\"), \" (desde la derecha) en 1 y el resto en 0.\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"El numero se puede obtener con la siguiente operaci\\xF3n:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" j\"))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Como el n\\xFAmero 1 solo tiene encendido el \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bit menos signicativo\"), \"(el bit del extremo derecho), al recorrer \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"j\"), \" posici\\xF3nes desde la derecha el bit j-esimo ser\\xE1 1.\"), mdx(\"blockquote\", null, mdx(\"p\", _extends({\n    parentName: \"blockquote\"\n  }, {\n    \"className\": \"md-p\"\n  }), \"Nota: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"j\"), \" empieza a contar las posici\\xF3nes desde 0, es decir el primer bit desde la derecha estar\\xE1 en la posici\\xF3n 0 el segundo en la posici\\xF3n 1 y asi sucesivamente.\")), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Ejemplos:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"000001 // \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"j \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n000010 // \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"j \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n000100 // \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"j \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n010000 // \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"4\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"j \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"4\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Luego se realiza la operaci\\xF3n and as\\xED:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cpp\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token macro property\"\n  }), \"#\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token directive keyword\"\n  }), \"include\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"<iostream>\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"using\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"namespace\"), \" std\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), \" S \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"43\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), \" j \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  cout \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" S \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"&\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" j \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" endl\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")))), mdx(\"h4\", {\n    \"className\": \"md-h4\",\n    \"id\": \"conocer-si-un-número-es-par-o-impar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#conocer-si-un-n%C3%BAmero-es-par-o-impar\",\n    \"aria-label\": \"conocer si un número es par o impar permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Conocer si un n\\xFAmero es par o impar\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Una forma de convertir un numero binario a decimal es colocando el numero en binario y luego las potencias de dos de derecha a izquierda, incrementando el exponente en uno en cada potencia.\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Por ejemplo tenemos el siguiente numero en binario:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"010100\"))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Escribimos las potencias y el resultado de las potencias y el numero en binario:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\u2075  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\u2074  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\xB3  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\xB2  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\xB9  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\u2070\\n---------------------\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"32\"), \"  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"16\"), \"  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"8\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"4\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \"   \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\")))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Luego se suman todas los valores de las posici\\xF3nes que sean 1:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"16\"), \" + \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"4\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"22\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dec\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Como vemos el resultado es 22 en decimal, entonces dir\\xEDamos que:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"010100 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bin\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"22\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dec\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Si sumamos los valores de cualquier combinaci\\xF3n de los bits excepto el \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bit menos signicativo\"), \" el resultado siempre ser\\xE1 par ya que todos tiene mitad, por que es el resultado del doble del anterior. Por eso decimos que el \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"bit menos significativo\"), \" es el que define la paridad de un n\\xFAmero.\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"En conclusi\\xF3n si el bit menos significativo del numero es 1 entonces es impar, y si es 0 entonces es par.\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Por ejemplo, para saber si un n\\xFAmero S es par o impar  realizamos la siguiente operaci\\xF3n:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"S \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"&\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\")))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"El resultado de esta operaci\\xF3n ser\\xE1 siempre 0 \\xF3 1.\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"El siguiente c\\xF3digo nos dice si el numero es par \\xF3 impar.\"), mdx(\"h4\", {\n    \"className\": \"md-h4\",\n    \"id\": \"dividir-y-multiplicar-un-entero-por-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#dividir-y-multiplicar-un-entero-por-2\",\n    \"aria-label\": \"dividir y multiplicar un entero por 2 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Dividir y multiplicar un entero por 2\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Las operaci\\xF3nes son:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S << 1\")), \" : Para multiplicar por 2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"S >> 1\")), \" : Para dividir entre 2\\nEl resultado es un entero redondeado.\")), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Por ejemplo la divisi\\xF3n \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"17/2\"), \" ser\\xEDa \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"8\"), \" y no \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"8.5\"), \".\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Mas ejemplos:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"// Teniendo en cuenta que cada operaci\\xF3n\\n// influye en la siguiente:\\n\\nS      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" 011010 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bin\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"26\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dec\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\nS \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"110100\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bin\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"52\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dec\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" S * \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\nS \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" 001101 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bin\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"13\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dec\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" S / \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), \"\\xB2\\nS \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" 011010 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"bin\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"6\"), \"  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dec\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" S / \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\")))), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Fin.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"fileAbsolutePath":"/home/gh0zialfat1h/Dev/blog/mfahri.me/content/blog/2018-08-17-manipulación-de-bits.md","frontmatter":{"title":"Manipulación de bits","subtitle":null,"date":"August 17, 2018","description":"Manipulación de bits y usos.","image":{"childImageSharp":{"sizes":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='125'%20viewBox='0%200%20400%20125'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%2063v62h401V62c0-61%200-62-2-62s-2%201-2%203c0%204-2%204-2%200l-2-3-1%201c1%203%200%205-2%205V1l-1%202c-1%201-1%200-1-1%201-1%200-2-1-2l-1%203c0%204-2%204-2%200l-2-3c-2%200-2%200-2%203v3c-1%200-2-1-2-3l-1-3c-1%200-2%201-2%203l-1%203c-2%200-2-1-2-3s-1-3-3-3c-1%200-2%200-1%202%200%203-3%205-4%203h-2l-2%201V1l-1%202c-1%201-1%200-1-1%201-1%200-2-1-2l-1%203-1%203-1-3c0-2%200-3-2-3l-1%202c1%202%200%204-2%204V1l-1%202c-1%201-1%200-1-1%201-1%200-2-1-2l-1%203-1%203-1-3c0-2%200-3-2-3s-2%200-2%203v3c-1%200-2-1-2-3l-1-3c-1%200-2%200-1%202%200%203-3%205-4%203h-2l-2%201V1l-1%202c-1%201-1%200-1-1%201-2%200-2-2-2-3%200-3%200-3%203v3c-1%200-2-1-2-3l-1-3c-2%200-2%201-2%203l-1%203-1-3c0-2%200-3-2-3s-2%200-2%203v3c-1%200-2-1-2-3l-1-3c-2%200-2%201-2%203l-1%203-1-3c0-2%200-3-2-3l-1%202c1%202%200%204-2%204V1l-1%202c-1%201-1%200-1-1%201-1%200-2-1-2l-1%203-1%203-1-3c0-2%200-3-2-3l-1%202c1%202%200%204-2%204V1l-1%202c-1%201-1%200-1-1V0c-1%200-2%201-1%202%200%201%200%202-1%201l-1-2v5c-2%200-3-2-2-4%200-2%200-2-2-2-3%200-3%200-3%203l-1%203-1-3c0-2%200-3-2-3l-1%202c1%202%200%204-2%204V1l-1%202c-1%201-1%200-1-1V0c-1%200-2%201-1%202%200%201%200%202-1%201l-1-2v5c-2%200-3-2-2-4l-1-2c-2%200-2%201-2%203l-1%203-1-3-1-3c-2%200-2%201-2%203l-1%203-1-3c0-2%200-3-2-3s-2%201-2%203l-1%203-1-3-1-3c-2%200-2%201-2%203l-1%203-1-3c0-2%200-3-2-3l-1%202c1%202%200%204-2%204V1l-1%202c-1%201-1%200-1-1%201-2%200-2-2-2s-2%200-2%202c1%202%200%204-2%204V1l-1%202c-1%201-1%200-1-1V0c-1%200-2%201-1%202%200%201%200%202-1%201l-1-2v5c-2%200-3-2-2-4l-1-2c-2%200-2%201-2%203l-1%203-1-3-1-3c-2%200-2%201-2%203l-1%203-1-3c0-2%200-3-2-3l-1%202v2c-1%201-1%200-1-1%200-2-2-3-2%200-1%201-1%200-1-1%201-1%200-2-1-2l-1%203-1%203-1-3c0-5-4-4-4%200v4l-1-3c-1-4-4-5-4-2v1l-1-2v5c-2%200-3-2-2-4%200-2%200-2-2-2s-3%200-2%202c0%201%200%202-1%201l-1-2v5c-2%200-3-2-2-4l-1-2c-2%200-2%201-2%203v4l-1-3c-1-5-4-5-4-1l-1%203-1-3c0-5-4-4-4%200v4l-1-3c-1-4-4-5-4-2v1c0-3-2-2-2%200s0%202-1%201V2c1-2%201-2-1-2s-2%201-2%203v4l-1-3c-1-4-4-5-4-2v1c0-3-2-3-2%200-1%201-1%200-1-1%201-1%200-2-1-2s-2%201-1%202c0%201%200%202-1%201%200-3-2-3-2%200-1%201-1%201-1-1%201-2%200-2-8-2h-8v7l-1-3c0-3-1-4-5-4-5%200-5%200-5%203v4l-1-3c-1-5-5-6-5-1v3l-1-3c0-4-4-4-4%200l-1%204V0h-6l-7%201h-1l-7-1h-8v3l-1%204V3c0-3%200-3-5-3s-5%200-5%203l-1%204V0H8v3L7%207V3c0-3%200-3-3-3H0v63m101-36C85%2049%2083%2051%2082%2048c-1-2-1-2-1%201s-1%205-3%207l-3%204-9%2012a824%20824%200%2000-19%2023c-2%200-5%209-4%2015v3h24c23%200%2026%200%2036-3l13-2h2l2-1h2c0-1%201-1%201%201h1l1-2%202-1%202%202h1c0-3%203-2%203%200%201%202%201%202%201%200s1-3%202-3a239%20239%200%200134-7h5c0-3%204-3%204-1l1%202%201-2%202-2h2l1%202c1%201%201%200%201-1%200-2%202-3%202%200%201%201%201%201%201-1-1-2%200-2%2011-4a261%20261%200%200128-5c2-2%203-2%203%200l1%201v-1l1-2%201%202c1%201%201%201%201-1l1-2%201%201v2c1%201%201%201%201-1l1-2%201%202v2l1-3c0-3%202-2%203%202%201%202%201%202%201-1v-4l7-1a629%20629%200%200133-5v1l1-11c-1-9%200-12%201-13v-4c-3-2-3-17%200-19%201-2%201-2-1-4-1-2-11-2-92-2h-90l-4%205m5%2020v23h178V24H106v23m-6-16l-3%206c0%202%200%202-1%201L86%2049a881%20881%200%2001-15%2023c0%203%200%203-1%201v-3l-5%206-5%208c0%202%200%202-1%201l-5%205-6%207c-2%202-2%203%2021%203h23v6c0%205%200%205%205%204%202%200%203-2%203-4l1-2v2c0%203%200%203%206%202l4-3h1c0%202%204%202%204%200h2l18-3%2016-4-1-3%201-3%201%203c0%203%200%203%202%203l2-1v-3c0-3%202-2%202%202%201%201%201%201%202-1l1-1%201%202%201-2h1c0%202%203%201%203-1h1l3%201%202-1%204-1c8%200%2030-5%2029-7l1-3%201%202%201%203%201-3%201-1%202%202%201-2v-2l1%202c0%203%200%203%202%200l2-1c0%201%200%202%201%201v-1l1-1%201%201h3l3-1a562%20562%200%200032-8c0-1-2-1-3%201l-2%201v-1l1-2-2%201h-1l-1-1-1%202-1%201-1-1-2-2-2%202-1%201v-1l-1-2-2%201h-1l-2-1%201%202v1l-3-2h-1l-2%202v-1l1-2-2%201h-1c0-2-5-1-5%201h-1c0-2-4-3-4%200l-1%201-1-1c0-3-4-2-4%200h-1c0-2-4-3-4%200l-1%201-1-1c0-2-2-2-3-1h-4l-1-1-1%202-1%201-1-1c0-2-2-2-3-1h-9c-1-2-5-1-5%201l-1%201-1-1-1-2-2%201h-9c-1-2-3-1-3%201h-1c0-2-4-3-4%200l-1%201-1-1c0-3-4-2-4%200h-1l-2-2c-2%200-3%200-2%202l-1%201-1-1-1-2-2%201h-4l-2-1-2%201h-6c0-2-6-1-6%201h-1c0-1-1-2-3-2s-2%200-2%202v1l-1-1c0-2-6-3-6-1h-1l-2-1h-3V27l-4%204m18%205c-7%209-1%2024%209%2020%206-2%207-18%201-22-3-2-8-1-10%202m23-2c-3%202-4%204-1%203%202%200%202%201%202%209l-1%209-2%201%206%201%205-1-1-1c-2%200-2-2-2-11-1-11-1-11-6-10m20%200c-3%202-4%204-1%203%202%200%202%201%202%209l-1%209-2%201%206%201%205-1-1-1c-2%200-2-2-2-11%200-12%200-12-6-10m18%201c-5%205-5%2017%200%2020%207%205%2013%200%2013-10%200-11-7-16-13-10m21-1c-3%201-4%204%200%203%202%200%202%200%202%209l-1%209-2%201%206%201%205-1-2-1-1-11c0-12%200-12-7-10m20%200c-4%202-4%205%200%204l2-1v9l-1%209-2%201%206%201%205-1-2-1-1-11c0-12%200-12-7-10m18%202c-5%205-2%2020%204%2021s10-3%2010-12c0-11-8-16-14-9m20%200c-5%205-2%2020%204%2021%207%201%2010-3%2010-12%200-11-8-16-14-9m-136%201c-2%202-2%2014%200%2017%203%203%205-1%205-9%200-9-2-12-5-8m60%200c-2%202-2%2014%200%2017%203%202%205-1%205-8%200-9-2-13-5-9m59%202c-2%206%201%2019%204%2015l2-8c0-7%200-8-2-9-2-2-2-2-4%202m21-2c-2%202-2%2014%200%2017%203%202%204%200%205-8%200-9-2-13-5-9M45%20107v4h45v-9H45v5'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":3.2,"src":"/static/1e0a4fbbb61bc1b960968a69fc8744cb/ee604/bit-manipulation.png","srcSet":"/static/1e0a4fbbb61bc1b960968a69fc8744cb/19ca5/bit-manipulation.png 480w,\n/static/1e0a4fbbb61bc1b960968a69fc8744cb/ee604/bit-manipulation.png 800w","sizes":"(max-width: 800px) 100vw, 800px"}}},"model":"post","style":null,"tags":["Competitive Programming","STLC++","C/C++","Algorithms"]},"fields":{"slug":"blog/manipulacion-de-bits"}}},"pageContext":{"slug":"blog/manipulacion-de-bits","previous":{"frontmatter":{"model":"post","slug":"conceptos-basicos-de-redux","pathPrefix":"blog","tags":["ReactJS","Redux","Basics"]}},"next":{"frontmatter":{"model":"post","slug":"competitive-programming-utilities","pathPrefix":"blog","tags":["Competitive Programming","C/C++","Tools"]}}}},"staticQueryHashes":["1179563384","1179563384","1813348943","3505318638","4039542472"]}