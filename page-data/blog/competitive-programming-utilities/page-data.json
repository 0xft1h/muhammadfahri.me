{"componentChunkName":"component---src-templates-post-template-js","path":"/blog/competitive-programming-utilities","result":{"data":{"avatar":{"sizes":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='300'%20viewBox='0%200%20400%20300'%20preserveAspectRatio='none'%3e%3cpath%20d='M202%20101c-12%203-14%204-19%208-15%2010-21%2025-17%2041l2%207c0%203%201%204%202%204l1%201%201%202c2%201%209%2019%2010%2027%201%204%200%205-1%205l-2%201h2l2%201-3%201-1%201-1%201h-4l-2%201c1%201-9%205-12%204l-1%201-2%201c-9%200-22%2017-32%2041l-5%2011c-7%2012-7%2015%200%2020%203%202%204%203%202%203v1c2%201%202%201%200%202v1c2%200%202%201%202%207l-1%206h164l9-3%2013-6c5-3%205-2-2-19l-13-33c-8-22-15-30-27-33a1234%201234%200%2001-27-6c4%202%202%2019-3%2025-6%205-9%208-10%206h-2c-1%201-1%201-3-1-3-4-3-8-2-11l2-10%201-9%201-3c0-3-3-5-6-3l-2-1%202-1c1%200%202-2%200-3v-2c1-3%200-7-3-9-2-2-2-2-1-3l2-1%202-3c5-3-1-8-9-8l-5-1c0-3%203-4%208-4%203%200%204%200%204-2l4%204c4%203%205%205%204%206l1%202%208-1%202%201-1%203-2%206c0%202%200%202%201%201l2-3c0-1%201-2%202-1v-1c-1-1%200-4%202-3h1c0-1%200-2%201-1l1-3c0-1%200-2%201-1%200%202%205-3%207-8l3-4c2-2%202-3%202-13v-7l-1-3c-1-3-13-14-13-12h-1l-7-7-5-4c-6-6-17-8-26-6'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3333333333333333,"src":"/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/7d509/avatar.jpg","srcSet":"/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/8d052/avatar.jpg 180w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/e2788/avatar.jpg 360w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/7d509/avatar.jpg 720w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/10d63/avatar.jpg 1080w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/7f945/avatar.jpg 1440w,\n/static/a2e9fd8e8b00fa2ccc3c13d0df12b917/d2452/avatar.jpg 4000w","sizes":"(max-width: 720px) 100vw, 720px"}},"site":{"siteMetadata":{"title":"Muhammad Fahri","siteUrl":"https://muhammadfahri.me"}},"mdx":{"id":"f82cf75f-83bf-5109-a7da-59ad9f39fca2","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"model\": \"post\",\n  \"title\": \"Competitive Programming Utilities\",\n  \"description\": \"Funciones útiles que utilizo en programación competitiva.\",\n  \"author\": \"Dante Calderón\",\n  \"pathPrefix\": \"blog\",\n  \"slug\": \"competitive-programming-utilities\",\n  \"image\": \"../images/https_-2f-2fcdn.evbuc.com-2fimages-2f38462400-2f173216012503-2f1-2foriginal.png\",\n  \"date\": \"2018-08-26T16:14:51-05:00\",\n  \"published\": true,\n  \"style\": \"medium-img\",\n  \"tags\": [\"Competitive Programming\", \"C/C++\", \"Tools\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"En Programaci\\xF3n Competitiva el \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tiempo\"), \" es un factor muy importante, as\\xED que siempre estamos buscando como mejorar nuestro tiempo. Tratamos siempre de minificar el esfuerzo al resolver el problema.\"), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Una de los cosas que tenemos en cuenta la velocidad con que escribimos o \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WPM\"), \"(Word per minute, Palabras por minuto), vaya que es muy importante con Jim?.\"), mdx(\"img\", {\n    \"src\": \"https://media.giphy.com/media/11M1k4fIwVqPF6/giphy.gif\",\n    \"alt\": \"Jim Carry Typing\"\n  }), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"En C++ podemos de cierta manera definir aliases para ciertas partes de codigo }\"), mdx(\"script\", {\n    src: \"https://gist.github.com/dantehemerson/79dbe6b47e777b27860b1515fd238860.js\"\n  }), mdx(\"p\", {\n    \"className\": \"md-p\"\n  }, \"Estas son alg\\xFAnas funciones utiles que cree y/o recopile para Programacio\\u0144 Competitiva, de cierta forma hay una copia de algunas funci\\xF3nes de javascript, espec\\xEDficamente la librer\\xEDa string. Para todas las funci\\xF3nes tambi\\xE9n tienes la complejidad en notacion \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"O grande\"), \". Esper\\xF3 que te sea \\xFAtil.\"), mdx(\"h4\", {\n    \"className\": \"md-h4\",\n    \"id\": \"string-a-mayúsculas-ó-minúsculas\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#string-a-may%C3%BAsculas-%C3%B3-min%C3%BAsculas\",\n    \"aria-label\": \"string a mayúsculas ó minúsculas permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"String a may\\xFAsculas \\xF3 min\\xFAsculas\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cpp\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cpp\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token macro property\"\n  }), \"#\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token directive keyword\"\n  }), \"include\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"<algorithm>\"), \"   \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// transform()\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token macro property\"\n  }), \"#\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token directive keyword\"\n  }), \"include\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"<cctype>\"), \"      \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// toupper(), tolower()\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token macro property\"\n  }), \"#\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token directive keyword\"\n  }), \"include\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"<functional>\"), \"  \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// ptr_fun()\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token macro property\"\n  }), \"#\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token directive keyword\"\n  }), \"include\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"<iostream>\"), \"    \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// cin, cout\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token macro property\"\n  }), \"#\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token directive keyword\"\n  }), \"include\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"<string>\"), \"      \"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// getline(), string\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"using\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"namespace\"), \" std\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  cout \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Enter something: \\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" flush\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  string s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"getline\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" cin\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" s \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"transform\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"begin\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"end\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"begin\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" ptr_fun \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" toupper \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  cout \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Uppercase: \\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" s \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" endl\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"transform\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"begin\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"end\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"begin\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" ptr_fun \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \" tolower \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  cout \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"Lowercase: \\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" s \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<<\"), \" endl\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")))));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"fileAbsolutePath":"/home/gh0zialfat1h/Dev/blog/mfahri.me/content/blog/2018-08-26-competitive-programming-utilities.md","frontmatter":{"title":"Competitive Programming Utilities","subtitle":null,"date":"August 26, 2018","description":"Funciones útiles que utilizo en programación competitiva.","image":{"childImageSharp":{"sizes":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='225'%20viewBox='0%200%20400%20225'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20113v112h401V0H0v113M118%207l-2%204c1%202%200%203-1%203-2%201-3%207-1%2010h14l-1-10c-1%200-2-1-1-3%200-2-3-6-5-6l-3%202m91%2030l1%2032%2040-1h78V38l-1-31-2%202%201%201%201%201h-31l-8%201c-6%200-7%200-8-2l-1-2v4l-1-3-1-3v6h-20V7l-1%202c-1%202-1%203-10%203s-10-1-10-3V6l-1%203c0%203%200%203-3%203s-3%200-3-2l-1-3c-1-1-1%200-1%202%200%203%200%203-3%203s-4-1-4-3l-1-3v3c0%203%200%203-4%203-5%200-5%200-5-3-1-2-1%2011-1%2028m28-24v4c0%202%200%202%2010%202h9v-3c0-2-1-2-10-3h-9m20%203v3h20v-6h-20v3m21%200c0%203%200%203%204%203%2051%200%2045%201%2045-3v-3h-49v3m0%208a3621%203621%200%200127%203c21%200%2022%200%2022-4v-2h-49v3M27%2027l-1%2024v24h94l-1-24-1-24H27m0%206v5h5c6%201%206%200%206-5v-5H27v5m12%200v5h12v-9l-6-1h-6v5m13%200c0%206%200%206%206%205h5V28H52v5m13%200c0%204%200%205%203%205%206%201%207%200%207-5v-5H65v5m12%200v5h12V28H77v5m13%200v5h6l6%201V28H90v5m14%200v6l7-1h7V28h-14v5m133-2v3l9-1h9l1-2c0-3%200-3-9-3h-10v3m20%200l1%203h19v-6h-20v3m21%200l1%203h48v-6h-49v3m1%205l-1%202c0%202%201%202%2025%202h24v-5h-24l-24%201M27%2041v6l1%204h9l1-6v-5h-5l-6%201m12%204v6h12V40H39v5m13%201v5h11V40H52v6m13-1v6h5c5-1%205%200%205-6v-5H65v5m12%201v5h12V40H77v6m13%200v5h13V41l-7-1h-6v6m14-1l1%206h13V40h-14v5m133-1v3h9c9%201%2010%200%2010-3%200-2-1-3-10-3h-9v3m23-2c-3%200-3%201-3%203%201%202%201%203%2010%203h10v-3c0-3%200-3-4-3-3%200-4%201-5%202h-1v-2h-7m18%203l1%203h48v-6h-49v3m-93%204l-2%204-2%204c-1%200-2%201-2%203l-2%205-3%203-2%204-2%204c-1%202-1%204-3%204-2%201-3%203-2%205l-3%203c-4%202-1%209%204%209l-1-2c-5-2-3-8%203-6%202%200%203%204%200%206-1%201-1%201%202%201h11l22%201h9c3%202%208-1%208-5l-1-3-1%203-2%204c-3%201-6-1-6-4s2-5%206-4l3%201-3-2-2-4-2-3c-2-1-3-2-3-4s-2-5-4-5l-1-3c0-2%200-2-1-1v2l-6%203c-3-1-2-6%200-7h6l-2-1-2-4c0-2-1-3-2-3l-2-4c0-3-3-6-6-6l-4%202m52%203v3h19v-3c0-3%200-3-4-3-3%200-4%200-5%202%200%202%200%202-1%201v-2c1-1-1-1-4-1-5%200-5%200-5%203m20%200l1%203h19v-6h-20v3m22-3v6h48v-5l-48-1M39%2057v5h12V52H39v5m13%200v5h11V52H52v5m25%200v5h12V52H77v5m13%200v5h13V52H90v5m14%200v5h14V52h-14v5m175%202v2h48v-5h-11c-11%200-12%200-13%202l-2%203v-3c0-2%200-2-11-2h-11v3m0%206v2h48v-5h-11c-11%200-12%200-13%202l-2%203v-3c1-2%201-2-11-2h-11v3M39%2069v5h6l5-1%201-5v-4H39v5m13%200v5h11V64H52v5m25%200v5h12V64H77v5m13%200v5h13V64H90v5m14%200v5h14V64h-14v5m-91%209c-3%202-4%204-1%204l1%203c0%202%200%203%204%203s4-1%205-3l1-3c1-1%201-2-2-4-4-4-4-4-8%200m380%205l-1%202c0%202-30%200-32-1-1-2-4-1-5%202-2%205-2%2024%200%2027l2%201%202-1v2l-1%201%204-3c1-3%202-4%201-1l1%202h27l1%203c1%204%204%204%206-1V87l-2-2c0%201-1%202-2%201v-2l1-1h-2m-36%202l2%201c2%201%200%203-2%203-2-1-3%203-3%2012%200%204%203%2014%203%2011%200-2%201-2%202-2%201%201%202%200%202-1l1-10v-1c1-1-1-11-2-13h-3m39%203l-3%202c-1-1-1%200-1%202a588%20588%200%20011%2021c0-2%201-2%202-2%202%201%203-1%203-11%200-9-1-14-2-12m-93%202l1%202c5%201-3%202-30%202a521%20521%200%200017%201%20460%20460%200%200044-2%2081%2081%200%2001-20%200h-9l4-1c4%200%204%200%202-1l-3-1h-6m-33%2053l-1%204-3%201c-4%200-4%202-1%204s3%203%202%205c0%203%200%203%203%202s3-1%205%201c3%202%204%201%202-3-1-2-1-3%202-5l2-3h-3c-4%200-4%200-6-4l-2-2m-113%2022v28l1%2027h41l42-1%201-28v-26l-42-1-43%201m12%2010c-7%208-10%2011-10%2013v2l3-2%204-3-3%204c-4%203-5%206-2%205v2c-2%202-3%206-2%207v2c-2%206%200%206%205%202%2010-12%2010-12%209-13s-2%200-6%204l-6%205%204-6c5-4%206-6%205-7h-1l-2%201v-2c3-2%203-5%200-4v-2l3-5c1-3%207-9%2010-10s4-3%201-3l-12%2010m54-7c-2%202-2%203-1%204s2%201%205-2c1-2%203-3%203-2l-2%203-3%204-3-1c-5-5-11-6-18-3l-3%201%203%204%202%207c0%203%201%204%203%205l2%203-3-1c-3-2-3-2-3%200-2%205-10%2010-17%2010-5%200-5%203-2%208%208%2011%2022%2010%2027-1%203-5%202-6-3-6-4%200-11-3-10-4l4%201c7%204%2012%202%208-4l-1-3c1%200%205%205%205%207%201%202%207-2%209-6%202-3%202-10%201-14v-1c1%200%203-1%204-4l4-3-3%205c-3%204-4%207-2%207%201%200%2011-12%2011-14%201-3%200-3-3%200l-3%201%201-1%201-2h-6c0-2-5-1-7%202m-41%201c-12%205-15%2015-7%2024l2%204c-2-1-17%2015-18%2019-1%202%203%203%205%201h1l3%201c3%200%2015-14%2015-17-1-3-3-2-10%207l-8%208%207-9%206-9%202-1c2%201%203%200%204-2l2-2-1%203c-1%203%200%203%205%202s7-2%207-4c-1-1%200-2%202-4l1-3-3%203-2%201c0-3-2-3-5-1l-4%202%203-3c3-2%204-3%205-6%200-2%201-6%203-7l2-4-3-1c-4-3-10-3-14-2m52%2010l-6%209v3l3-3%204-4-14%2017-14%2017%208-7%206-6-3%204c-7%209-8%209-5%209l9-9%208-8-6%209c-8%208-8%2011-1%203l5-3-4%204c-3%204-3%204-1%204%203%200%2016-16%2017-20%200-2-1-1-5%204-5%206-7%208-7%206l6-7c6-7%209-13%204-8l-3%201%203-3%202-4c0-2-1-1-5%204l-6%205%206-8c5-6%207-10%203-6l-3%201%202-3c3-2%205-7%203-7l-6%206M83%20205l-3%201c-2%200-2%200-2%202v5c0%203%200%203%203%203h2l-1%201c-2%200-2%202-1%204l2%201c-1-2%202-7%206-9%204-3%205-2%203%203-1%206%200%206%202%201%201-3%201-4-1-7-1-4-3-5-3-3s-4%201-4-1c-1-2-2-3-3-1m-19%205l-2%204c0%202%205%206%207%206%201%200%206-4%206-6s-5-6-6-6l-5%202'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.7777777777777777,"src":"/static/d5deca84675b626afe17283547df504a/e4d72/https_-2f-2fcdn.evbuc.com-2fimages-2f38462400-2f173216012503-2f1-2foriginal.png","srcSet":"/static/d5deca84675b626afe17283547df504a/19ca5/https_-2f-2fcdn.evbuc.com-2fimages-2f38462400-2f173216012503-2f1-2foriginal.png 480w,\n/static/d5deca84675b626afe17283547df504a/40ffe/https_-2f-2fcdn.evbuc.com-2fimages-2f38462400-2f173216012503-2f1-2foriginal.png 960w,\n/static/d5deca84675b626afe17283547df504a/e4d72/https_-2f-2fcdn.evbuc.com-2fimages-2f38462400-2f173216012503-2f1-2foriginal.png 1280w","sizes":"(max-width: 1280px) 100vw, 1280px"}}},"model":"post","style":"medium-img","tags":["Competitive Programming","C/C++","Tools"]},"fields":{"slug":"blog/competitive-programming-utilities"}}},"pageContext":{"slug":"blog/competitive-programming-utilities","previous":{"frontmatter":{"model":"post","slug":"manipulacion-de-bits","pathPrefix":"blog","tags":["Competitive Programming","STLC++","C/C++","Algorithms"]}},"next":{"frontmatter":{"model":"project","slug":"devicons-server","pathPrefix":"portfolio","tags":["API","ExpressJS","NodeJS","Devicons","DevTools"]}}}},"staticQueryHashes":["1179563384","1179563384","1813348943","3505318638","4039542472"]}