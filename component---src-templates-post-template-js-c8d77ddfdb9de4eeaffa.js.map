{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/components/AuthorPost.js","webpack:///./src/components/PostHeader.js","webpack:///./src/components/Share.js","webpack:///./src/components/TagsSection.js","webpack:///./src/templates/PostTemplate.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Container","styled","div","Image","Img","Body","Name","p","media","sm","Author","Link","Edit","a","props","sizes","avatar","id","to","date","timeToRead","title","className","href","editLink","target","rel","src","alt","Title","h1","md","AuthorPost","image","childImageSharp","Button","AwesomeButton","ShareTitle","span","Share","path","url","_","useStaticQuery","siteUrl","type","size","Tag","TagsSection","tags","map","tag","key","kebabCase","toLowerCase","style","marginTop","PostContent","content","Fragment","PostHeader","Markdown","pageQuery","PostTemplate","data","mdx","body","fileAbsolutePath","slug","fields","frontmatter","description","isPost","getLinkEditPost"],"mappings":"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","file":"component---src-templates-post-template-js-c8d77ddfdb9de4eeaffa.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { media } from '../styles'\n\nconst Container = styled.div`\n  display: flex;\n  margin-bottom: 13px;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  margin-top: 20px;\n  align-items: center;\n  font-family: 'Open Sans', sans-serif;\n`\n\nconst Image = styled(Img)`\n  margin: 0;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 13px;\n  img {\n    margin: 0 !important;\n  }\n`\n\nconst Body = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Name = styled.p`\n  margin: 0;\n  font-size: 11px;\n  ${media.sm`\n\t\tfont-size: 13px;\n\t\tb {\n\t\t\tdisplay: inline-block !important;\n\t\t}\n\t`} font-weight: 600;\n  color: #767676 !important;\n  text-transform: uppercase;\n  b {\n    color: #575757;\n    font-weight: 400;\n    display: none;\n  }\n`\n\nconst Author = styled(Link)`\n  color: #0077b5 !important;\n  text-decoration: none !important;\n  display: block;\n  ${media.sm`\n\t\tdisplay: inline-block;\n\t`};\n`\n\nconst Edit = styled.a`\n  font-size: 13px;\n  display: flex;\n  align-items: center;\n  border: none !important;\n  img {\n    width: 16px;\n    height: 16px;\n    margin: 0;\n  }\n  span {\n    margin-left: 4px;\n    display: none;\n  }\n  ${media.sm`\n    span {\n      display: inherit;\n    }\n  `};\n`\n\nexport default props => (\n  <Container>\n    <Image sizes={props.avatar.sizes} />\n    <Body>\n      <Name>\n        <Author id=\"post_authorname\" to=\"/#a-little-bit-about-me\">\n          Muhammad Fahri\n        </Author>{' '}\n        <b>|</b>{' '}\n        <span id=\"post_date\">\n          {props.date} Â· {props.timeToRead} min read\n        </span>\n      </Name>\n      <Edit\n        title=\"Edit on Github\"\n        className=\"default\"\n        href={props.editLink}\n        target=\"__blank\"\n        rel=\"noopener\"\n      >\n        <img src=\"https://icongr.am/fontawesome/github.svg\" alt=\"Edit on Github\" />\n        <span>Edit on Github</span>\n      </Edit>\n    </Body>\n  </Container>\n)\n","import Img from 'gatsby-image'\nimport React from 'react'\nimport styled from 'styled-components'\nimport AuthorPost from '../components/AuthorPost'\nimport { media } from '../styles'\n\nconst Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  margin-bottom: 26px;\n  margin-top: 100px;\n`\n\nconst Title = styled.h1`\n  margin-top: 60px;\n  font-size: 28px;\n  margin: 0;\n  padding-left: 10px;\n  padding-right: 10px;\n  ${media.sm`\n    font-size: 28px;\n  `}\n  ${media.md`\n    font-size: 37px;\n  `}\n`\n\nexport default props => (\n  <Container>\n    <Title id=\"post_id\">{props.title}</Title>\n    <AuthorPost\n      editLink={props.editLink}\n      date={props.date}\n      timeToRead={props.timeToRead}\n      avatar={props.avatar}\n    />\n    <Img sizes={props.image.childImageSharp.sizes} />\n  </Container>\n)\n","import { graphql, useStaticQuery } from 'gatsby'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { AwesomeButton } from 'react-awesome-button'\n\nconst Button = styled(AwesomeButton)`\n  margin: 14px 3px !important;\n  border: 0 !important;\n  .aws-btn__content {\n    padding: 0 14px !important;\n    & > span {\n      height: 100%;\n    }\n  }\n  img {\n    width: 22px;\n    height: 88%;\n    margin: 0;\n    border: 0px solid !important;\n    position: relative;\n    top: 2px;\n  }\n`\n\nconst Container = styled.div`\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: 0px;\n  padding-bottom: 15px;\n  justify-content: center;\n`\n\nconst ShareTitle = styled.span`\n  width: 100%;\n  text-align: center;\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 0;\n  margin-bottom: 20px;\n`\n\nconst Share = ({ title, path }) => {\n  const { siteUrl } = _.get(\n    useStaticQuery(graphql`\n      query ShareComponentQuery {\n        site {\n          siteMetadata {\n            siteUrl\n          }\n        }\n      }\n    `),\n    'site.siteMetadata'\n  )\n\n  const url = `${siteUrl}/${path}`\n\n  return (\n    <Container>\n      <ShareTitle>Share it:</ShareTitle>\n      <Button\n        type=\"twitter\"\n        size=\"small\"\n        href={`https://twitter.com/intent/tweet?text=${title} by Muhammad Fahri(@muhammdfahrim) ${url}`}\n        title=\"Share on Twitter\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        <img\n          src=\"https://icongr.am/fontawesome/twitter.svg?color=ffffff\"\n          title=\"Share on Twitter\"\n          alt=\"img\"\n        />\n      </Button>\n      <Button\n        type=\"facebook\"\n        size=\"small\"\n        href={`https://www.facebook.com/sharer/sharer.php?app_id=2362615167377525&sdk=joey&u=${url}`}\n        title=\"Share on Facebook\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        <img\n          src=\"https://icongr.am/fontawesome/facebook.svg?color=ffffff\"\n          title=\"Share on Facebook\"\n          alt=\"img\"\n        />\n      </Button>\n\n      <Button\n        type=\"linkedin\"\n        size=\"small\"\n        rel=\"noopener\"\n        href={`http://www.linkedin.com/shareArticle?url=${url}&isFramed=true`}\n        title=\"Share on Linkedin\"\n        target=\"_blank\"\n      >\n        <img\n          src=\"https://icongr.am/fontawesome/linkedin.svg?color=ffffff\"\n          title=\"Share on Linkedin\"\n          alt=\"img\"\n        />\n      </Button>\n    </Container>\n  )\n}\n\nShare.propTypes = {\n  title: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n}\n\nexport default Share\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\nimport { media } from '../styles'\n\nconst Container = styled.div`\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`\n\nconst Tag = styled(Link)`\n  background: #fff;\n  display: inline-block;\n  background: #fff;\n  padding: 0 0.9em;\n  font-size: 0.7rem;\n  font-weight: 600;\n  line-height: 23px;\n  color: #333;\n  border-radius: 0.5625rem;\n  text-decoration: none;\n  border: 2px solid #d6e0ef;\n  margin: 2px 2px;\n  cursor: pointer;\n  transition: 0.3s;\n  ${media.sm`\n    line-height: 30px;\n    font-size: 0.8rem;\n    margin: 2px 4px;\n  `}\n\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`\n\nconst Title = styled.span`\n  font-weight: 700;\n  font-size: 13px;\n  margin-right: 6px;\n  ${media.sm`\n    font-size: 15px;\n  `}\n`\nconst TagsSection = ({ tags }) => {\n  return (\n    <Container id=\"post_tags\">\n      <hr />\n      <Title>TAGS:</Title>\n      {tags.map(tag => (\n        <Tag key={tag} to={`/blog/tags/${kebabCase(tag.toLowerCase())}`}>\n          {tag}\n        </Tag>\n      ))}\n      <hr\n        style={{\n          marginTop: '23px',\n        }}\n      />\n    </Container>\n  )\n}\n\nexport default TagsSection\n","import { graphql } from 'gatsby'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport React from 'react'\nimport Markdown from '../components/Markdown'\nimport PostHeader from '../components/PostHeader'\nimport Share from '../components/Share'\nimport TagsSection from '../components/TagsSection'\nimport { getLinkEditPost } from '../utils'\nimport Layout from './TemplateLayout'\n\nexport const PostContent = ({ title, image, editLink, date, timeToRead, avatar, content }) => (\n  <React.Fragment>\n    <PostHeader\n      title={title}\n      image={image}\n      editLink={editLink}\n      date={date}\n      timeToRead={timeToRead}\n      avatar={avatar}\n    />\n    <Markdown content={content} />\n  </React.Fragment>\n)\n\nconst PostTemplate = props => {\n  const {\n    timeToRead,\n    body,\n    fileAbsolutePath,\n    fields: { slug },\n    frontmatter: { title, image, date, description, tags },\n  } = props.data.mdx\n\n  return (\n    <Layout\n      isPost\n      title={title}\n      path={slug}\n      image={image.childImageSharp.sizes.src}\n      description={description}\n    >\n      <PostContent\n        title={title}\n        image={image}\n        editLink={getLinkEditPost(fileAbsolutePath)}\n        date={date}\n        timeToRead={timeToRead}\n        avatar={props.data.avatar}\n        content={body}\n      />\n      <TagsSection tags={tags} />\n      <Share title={title} path={slug} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostQuery($slug: String!) {\n    avatar: imageSharp(fluid: { originalName: { regex: \"/avatar.jpg/\" } }) {\n      sizes(maxWidth: 720) {\n        ...GatsbyImageSharpSizes_tracedSVG\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      timeToRead\n      fileAbsolutePath\n      frontmatter {\n        title\n        subtitle\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image {\n          childImageSharp {\n            sizes(maxWidth: 1920) {\n              ...GatsbyImageSharpSizes_tracedSVG\n            }\n          }\n        }\n        model\n        style\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n\nexport default PostTemplate\n"],"sourceRoot":""}